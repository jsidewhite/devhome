// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "inspectable.idl";
import "windows.foundation.idl";

namespace DevHome.Elevation
{
    [contractversion(1)] apicontract ElevationContract
    {
    }

    enum Zone
    {
        A,
        B,
        C,
    };

    [contract(ElevationContract, 1.0), uuid(2f2222a5-1000-47ef-864e-1e46ed31bb22)]
    interface IZoneConnection
    {
    };

    //todo: rename to OpenChannel
    [default_interface]
    runtimeclass ZoneConnectionManager
    {
        // Called from an elevated process
        static String PrepareConnection(
            UInt32 pid,
            Windows.Foundation.DateTime processCreateTime,
            Zone name);

        // Called from an unelevated process
        static IZoneConnection OpenConnection(String connectionId);
        static void CloseConnection(String connectionId);
    }

    [contract(ElevationContract, 1.0)]
    interface IZoneA
    {
        UInt32 GetName();
    }

    
    [contract(ElevationContract, 1.0)]
    runtimeclass ZoneA
    {
        [default] interface IZoneA;
        interface IZoneConnection;
    }
}
