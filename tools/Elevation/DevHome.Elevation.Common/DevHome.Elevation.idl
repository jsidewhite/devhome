// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "inspectable.idl";
import "windows.foundation.idl";

namespace DevHome.Elevation
{
    [contractversion(1)]
    apicontract ElevationContract
    {
    }

    enum Zone
    {
        ZoneA,
        ZoneB,
        ZoneC,
    };

    [contract(ElevationContract, 1.0), uuid(2b69fc32-cabe-4758-b9a0-fb8542e9c55c)]
    interface IZone
    {
    }

    [default_interface]
    runtimeclass ZoneConnection
    {
        ZoneConnection(Zone zoneName, UInt32 pid, Windows.Foundation.DateTime processCreateTime);
        
        IZone ResolveZone();
    };

    //todo: rename to OpenChannel
    [default_interface]
    runtimeclass ZoneConnectionManager
    {
        // Called from an elevated process
        /*
        static String PrepareConnection(
            UInt32 pid,
            Windows.Foundation.DateTime processCreateTime,
            Zone name);

        */
        static void PinConnection(ZoneConnection connection);

        // Called from an unelevated process
        static ZoneConnection OpenConnection(Zone zoneName);
        //static void CloseConnection(String connectionId);
    }


    //[contract(ElevationContract, 1.0)]
    runtimeclass ZoneA
    {
        UInt32 GetName();
    }

}
