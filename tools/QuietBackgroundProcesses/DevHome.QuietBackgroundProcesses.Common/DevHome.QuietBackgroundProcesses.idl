// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "inspectable.idl";

namespace DevHome.QuietBackgroundProcesses
{
    // Performance Engine types
    enum ProcessType
    {
        User,
        Background,
    };

    [default_interface]
    runtimeclass ProcessRow
    {
        //Int64 Id { get; };
        String Name { get; };
        ProcessType Type { get; };
        //Int64 ProcessDuration { get; };
        //Int64 CpuTime { get; };
        //Int64 CpuTimeSigma { get; };
        Int64 CpuTimeAboveThreshold { get; };
    }

    [default_interface]
    runtimeclass ProcessPerformanceTable
    {
        ProcessRow[] Rows { get; };
    }

    [default_interface]
    runtimeclass PerformanceRecorderEngine
    {
        PerformanceRecorderEngine();
        Int64 Start();
        void Stop();
        UInt64 GetProcessCpuUsage2(UInt32 processId);
        ProcessPerformanceTable GetProcessPerformanceTable();
    }

    // Quiet Background Process types
    [default_interface]
    runtimeclass QuietBackgroundProcessesSession
    {
        static QuietBackgroundProcessesSession GetSingleton();
        Int64 Start();
        void Stop();
        Boolean IsActive { get; };
        Int64 TimeLeftInSeconds { get; };
        ProcessPerformanceTable GetProcessPerformanceTable();
    }

    [default_interface]
    runtimeclass QuietBackgroundProcessesSessionManager {
        QuietBackgroundProcessesSessionManager();
        static Boolean IsFeaturePresent();
        static QuietBackgroundProcessesSession GetSession();
        static QuietBackgroundProcessesSession TryGetSession();
    }
}
